---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app comfyui
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback

  values:
    controllers:
      comfyui:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          runtimeClassName: nvidia

          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: nvidia.com/gpu.present
                        operator: In
                        values:
                          - "true"

        containers:
          app:
            image:
              repository: ghcr.io/ai-dock/comfyui
              tag: v2-cuda-12.1.1-base-22.04-v0.2.7@sha256:ca4c95d4d4743d7d5683e57f5e0358fe586bc57578f66c2a844e9fa0650cc619

            env:
              AUTO_UPDATE: "false"
              DIRECT_ADDRESS_GET_WAN: "true"
              SERVICEPORTAL_URL: "comfy.${SECRET_DOMAIN}"
              WEB_ENABLE_AUTH: "false"
              WORKSPACE: "/workspace"
              CF_QUICK_TUNNELS: "false"
              SERVERLESS: "false"
              PROVISIONING_SCRIPT: "https://raw.githubusercontent.com/ai-dock/comfyui/main/config/provisioning/flux.sh"

            securityContext:
              privileged: true

            resources:
              requests:
                cpu: 500m
                memory: 34Gi
              limits:
                memory: 34Gi
                nvidia.com/gpu: 1 # requesting 1 GPU

    service:
      app:
        controller: comfyui
        ports:
          http:
            port: 8188

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: "ComfyUI"
          hajimari.io/icon: mdi:draw
          hajimari.io/group: "AI"
          hajimari.io/instance: "admin"
        hosts:
          - host: &host "comfy.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      workspace:
        enabled: true
        existingClaim: comfyui
        globalMounts:
          - path: /workspace

      output:
        type: nfs
        server: tower.local
        path: /mnt/user/ai-output
        globalMounts:
          - path: /app/Output

      config:
        type: configMap
        name: comfyui-configmap
        advancedMounts:
          comfyui:
            app:
              - path: /workspace/ComfyUI/custom_nodes/ComfyUI-Manager/config.ini
                subPath: config.ini
                readOnly: true