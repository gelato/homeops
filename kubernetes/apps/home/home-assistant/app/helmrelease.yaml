---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    timeout: 45m
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    defaultPodOptions:
      hostNetwork: true
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.1.4@sha256:0d20c912e2c2a1a8f76b22f4689b575b4498c3cc334b807a91ecf82f2cd33094
            envFrom:
              - secretRef:
                  name: hass-secrets
            env:
              TZ: ${TIMEZONE}
              PYTHONPATH: "/config/deps"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              privileged: true
              #CHANGEME ON THE NEXT UPDATE
              readOnlyRootFilesystem: false
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW
                  - NET_BROADCAST
            resources:
              requests:
                cpu: 92m
                memory: 717M
              limits:
                memory: 5109M
        pod:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          # nodeSelector:
          #   sonoff.feature.node.kubernetes.io/dongle-e: "true"
    service:
      main:
        controller: main
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.108.44
        ports:
          http:
            port: 8123
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
    ingress:
      main:
        className: internal
        annotations:
          nginx.org/websocket-services: "main"
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host hass.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
      ext:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://home.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
          nginx.org/websocket-services: "main"
          # nginx.ingress.kubernetes.io/whitelist-source-range: |
          #   10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host-ext home.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host-ext
      ext-webhook:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host-ext-callback call-home.${SECRET_DOMAIN}
            paths:
              - path: /api/webhook/update_config
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host-ext-callback
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant
      bt:
        enabled: true
        type: hostPath
        hostPath: /run/dbus
        globalMounts:
        - path: /run/dbus
      snd:
        enabled: true
        type: hostPath
        hostPath: /dev/snd
        globalMounts:
        - path: /dev/snd
      # usb:
      #   enabled: true
      #   type: hostPath
      #   hostPath: /dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20240122203435-if00
      #   # hostPathType: CharDevice
      #   globalMounts:
      #   - path: /dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20240122203435-if00
      tmp:
        type: emptyDir
      deploy-key:
        type: secret
        name: hass-secrets-gh
        defaultMode: 256
        globalMounts:
          - path: /root/.ssh/id_rsa
            subPath: GITHUB_DEPLOY_KEY
      known-hosts:
        type: secret
        name: hass-secrets-gh
        defaultMode: 256
        globalMounts:
          - path: /root/.ssh/known_hosts
            subPath: GITHUB_KNOWN_HOSTS
