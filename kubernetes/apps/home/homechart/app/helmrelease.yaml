---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: homechart
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: homechart-secret
        containers:
          main:
            image:
              repository: ghcr.io/candiddev/homechart
              tag: v2025.09.01@sha256:fc5572b1eebf43d6647f0af8d6604c296a4f5f8a2ab7eab9c59c8900871f17d1
            env:
              TZ: ${TIMEZONE}
              homechart_database_uri: postgresql://${HOMECHART_PG_USER}:${HOMECHART_PG_PASSWORD}@postgres-lb.database.svc.cluster.local/${HOMECHART_DB_NAME}
              # HOMECHART_postgresql_hostname: postgres-lb.database.svc.cluster.local
              # HOMECHART_postgresql_password: ${HOMECHART_PG_PASSWORD}
              # HOMECHART_postgresql_username: ${HOMECHART_PG_USER}
              # HOMECHART_postgresql_database: ${HOMECHART_DB_NAME}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api
                    port: 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 15m
                memory: 105M
              limits:
                memory: 1G
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: internal
        hosts:
          - host: home.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
