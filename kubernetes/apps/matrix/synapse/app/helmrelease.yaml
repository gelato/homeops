---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app synapse
spec:
  interval: 5m
  releaseName: matrix-synapse
  chart:
    spec:
      chart: matrix-synapse
      version: 3.11.4
      sourceRef:
        kind: HelmRepository
        name: matrix-synapse
        namespace: flux-system
  values:
    serverName: "${SECRET_DOMAIN}"
    publicServerName: "matrix.${SECRET_DOMAIN}"

    wellknown:
      enabled: false

    workers:
      default:
        replicaCount: 2
        strategy:
          type: RollingUpdate
        podSecurityContext:
          fsGroup: 666
          runAsGroup: 666
          runAsUser: 666

        securityContext:
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 666

        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi

      pusher:
        enabled: true

      appservice:
        enabled: true
        generic: true
        name: appservices


      media_repository:
        enabled: false
        listeners: [media]
        csPaths:
          - "/_matrix/media/.*"
          - "/_matrix/client/v1/media/.*"
          - "/_matrix/federation/v1/media/.*"
          - "/_synapse/admin/v1/purge_media_cache$"
          - "/_synapse/admin/v1/room/.*/media"
          - "/_synapse/admin/v1/user/.*/media"
          - "/_synapse/admin/v1/media/"
          - "/_synapse/admin/v1/quarantine_media/"
          - "/_synapse/admin/v1/users/.*/media$"
        paths:
          - "/_matrix/media/.*"
          - "/_matrix/client/v1/media/.*"
          - "/_matrix/federation/v1/media/.*"

      user_dir:
        enabled: false
        name: userdir
        listeners: [client]
        csPaths:
          - "/_matrix/client/(api/v1|r0|v3|unstable)/user_directory/search$"

      frontend_proxy:
        enabled: false
        listeners: [client]
        csPaths:
          - "/_matrix/client/(api/v1|r0|v3|unstable)/keys/upload"

      federation_sender:
        enabled: false
        replicaCount: 2

      generic_worker:
        enabled: false
        generic: true
        replicaCount: 2
        listeners: [client]
        csPaths:
          ## Client API requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
          - "/_matrix/client/v1/rooms/.*/hierarchy$"
          - "/_matrix/client/unstable/org.matrix.msc2716/rooms/.*/batch_send$"
          - "/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
          - "/_matrix/client/(r0|v3|unstable)/account/3pid$"
          - "/_matrix/client/(r0|v3|unstable)/account/whoami$"
          - "/_matrix/client/(r0|v3|unstable)/devices$"
          - "/_matrix/client/versions$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/search$"

          ## Encryption requests
          - "/_matrix/client/(r0|v3|unstable)/keys/query$"
          - "/_matrix/client/(r0|v3|unstable)/keys/changes$"
          - "/_matrix/client/(r0|v3|unstable)/keys/claim$"
          - "/_matrix/client/(r0|v3|unstable)/room_keys/"

          ## Registration/login requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/login$"
          - "/_matrix/client/(r0|v3|unstable)/register$"
          - "/_matrix/client/v1/register/m.login.registration_token/validity$"

          ## Event sending requests
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/join/"
          - "/_matrix/client/(api/v1|r0|v3|unstable)/profile/"

          ## User directory search requests
          - "/_matrix/client/(r0|v3|unstable)/user_directory/search"

          ## The typing event stream
          - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/typing"

          ## The to_device event stream
          - "/_matrix/client/(r0|v3|unstable)/sendToDevice/"

          ## The account_data event stream
          - "/_matrix/client/(r0|v3|unstable)/.*/tags"
          - "/_matrix/client/(r0|v3|unstable)/.*/account_data"

          ## The receipts event stream
          - "/_matrix/client/(r0|v3|unstable)/rooms/.*/receipt"
          - "/_matrix/client/(r0|v3|unstable)/rooms/.*/read_markers"

          ## The presence event stream
          - "/_matrix/client/(api/v1|r0|v3|unstable)/presence/"

      synchrotron:
        enabled: true
        generic: true
        listeners: [client]
        csPaths:
          - "/_matrix/client/(v2_alpha|r0|v3)/sync$"
          - "/_matrix/client/(api/v1|v2_alpha|r0|v3)/events$"
          - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
          - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

      frontend_proxy:
        enabled: false

    config:
      reportStats: false
      publicBaseurl: "https://matrix.${SECRET_DOMAIN}"
      # turnUris: []
      # turnSecret: ''
      enableRegistration: true
      macaroonSecretKey: ${MATRIX_MACAROON_SECRET_KEY}
      # trustedKeyServers:
      #   - server_name: matrix.org

    extraConfig:
      use_presence: true
      enable_search: true
      dynamic_thumbnails: true

      email:
        smtp_host: smtp-relay.service.svc.cluster.local
        smtp_port: 25
        notif_from: "Skynerv Matrix <noreply@${SECRET_DOMAIN}>"

      enable_3pid_lookup: false
      # app_service_config_files:
      #   - "/mautrix-discord/registration.yaml"
      #   - "/mautrix-discord/double-puppet-registration.yaml"
      use_appservice_legacy_authorization: true
      url_preview_ip_range_blacklist:
        - "127.0.0.0/8"
        - '192.168.0.0/16'
        - '10.0.0.0/8'
      url_preview_enabled: true
      oidc_providers:
        - idp_id: authentik
          idp_name: Skynerv SSO
          discover: true
          issuer: "https://id.${SECRET_DOMAIN}/application/o/synapse/"
          client_id: "${MATRIX_CLIENT_ID}"
          client_secret: "${MATRIX_CLIENT_SECRET}"
          scopes:
            - "openid"
            - "profile"
            - "email"
          user_mapping_provider:
            config:
              localpart_template: "{{ user.preferred_username }}"
              display_name_template: "{{ user.name | capitalize }}"

    service:
      type: ClusterIP
      port: 8008
      targetPort: http

    ingress:
      enabled: true
      className: external
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 10m
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"

    postgresql:
      enabled: false

    redis:
      enabled: false

    externalPostgresql:
      host: "postgres16-rw.database.svc.cluster.local"
      port: 5432
      username: "${SECRET_POSTGRES_SYNAPSE_USERNAME}"
      existingSecret: "synapse-secret"
      existingSecretPasswordKey: POSTGRES_SYNAPSE_PASSWORD
      database: "${SECRET_POSTGRES_SYNAPSE_DBNAME}"

    externalRedis:
      host: redis-sentinel-master.database.svc.cluster.local
      port: 6379
      dbid: 36

    synapse:
      strategy:
        type: RollingUpdate
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/_synapse/metrics"
        prometheus.io/port: "9090"
      # extraVolumes:
        # - name: mautrix-discord-registration
        #   secret:
        #     secretName: mautrix-discord-secret
      # extraVolumeMounts:
      #   - name: mautrix-discord-registration
      #     mountPath: /mautrix-discord
      #     readOnly: true
      podSecurityContext:
        fsGroup: 666
        runAsGroup: 666
        runAsUser: 666

      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 666

      resources:
        limits:
          cpu: 1000m
          memory: 2500Mi
        requests:
          cpu: 100m
          memory: 2500Mi


    signingkey:
      job:
        enabled: true

        generateImage:
          repository: matrixdotorg/synapse
          # tag: latest
          pullPolicy: IfNotPresent

        publishImage:
          repository: bitnami/kubectl
          # tag: latest
          pullPolicy: IfNotPresent

        podSecurityContext:
          fsGroup: 666
          runAsGroup: 666
          runAsUser: 666

        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 666

      resources:
        limits:
          cpu: 100m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 250Mi


    persistence:
      enabled: true
      existingClaim: *app

    serviceAccount:
      create: true
